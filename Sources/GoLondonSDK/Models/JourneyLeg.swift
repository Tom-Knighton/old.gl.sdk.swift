//
// JourneyLeg.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// A leg of the journey, i.e. in a journey that takes you from point A->B by tube, and B->C by bus, A->B and B->C are JourneyLegs
public struct JourneyLeg: Codable {
    
    /// The instructions for this leg of the journey, i.e. 'Walk to xxx'
    public var instruction: JourneyLegInstruction?
    
    /// The time this leg of the journey departs, if available, i.e. the time a train will leave the station
    public var departureTime: Date?
    
    /// The time this leg of the journey ends, i.e. the time a train will arrive at its destination
    public var arrivalTime: Date?
    
    /// The StopPoint, if available, this leg of the journey is departing from
    public var departurePoint: StopPoint?
    
    /// The StopPoint, if available, this leg of the journey arrives at
    public var arrivalPoint: StopPoint?
    
    /// The path this leg takes, including a list of StopPoints the journey will travel through
    public var path: JourneyLegPath?
    
    /// Options for the current journey leg
    public var routeOptions: [JourneyLegRouteOption]?
    
    /// The mode of this leg, i.e. bus or elizabeth-line
    public var mode: JourneyMode?
    
    /// Any disruptions affecting this leg of the journey
    public var disruptions: [Disruption]?
    
    /// Whether or not the current leg is disrupted in any way
    public var isDisrupted: Bool?
    
    /// Whether or not the leg has fixed locations like Stop Points
    public var hasFixedLocations: Bool?
    
    public init(instruction: JourneyLegInstruction? = nil, departureTime: Date? = nil, arrivalTime: Date? = nil, departurePoint: StopPoint? = nil, arrivalPoint: StopPoint? = nil, path: JourneyLegPath? = nil, routeOptions: [JourneyLegRouteOption]? = nil, mode: JourneyMode? = nil, disruptions: [Disruption]? = nil, isDisrupted: Bool? = nil, hasFixedLocations: Bool? = nil) {
        self.instruction = instruction
        self.departureTime = departureTime
        self.arrivalTime = arrivalTime
        self.departurePoint = departurePoint
        self.arrivalPoint = arrivalPoint
        self.path = path
        self.routeOptions = routeOptions
        self.mode = mode
        self.disruptions = disruptions
        self.isDisrupted = isDisrupted
        self.hasFixedLocations = hasFixedLocations
    }

}
