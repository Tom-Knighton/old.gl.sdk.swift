//
// LineRoute.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// A section of a Line involved in a disruption
public struct LineRoute: Codable {
    
    /// The id of the line route
    public var id: String?
    
    /// The name of the line
    public var name: String?
    
    /// The direction of the route
    public var direction: String?
    
    /// Where the route starts
    public var originationName: String?
    
    /// Where the route ends
    public var destinationName: String?
    
    public init(id: String? = nil, name: String? = nil, direction: String? = nil, originationName: String? = nil, destinationName: String? = nil) {
        self.id = id
        self.name = name
        self.direction = direction
        self.originationName = originationName
        self.destinationName = destinationName
    }

}

/// A data class representing a line id, and a series of routes served by that line.
public struct LineRoutes: Codable {
    
    /// The id of the line i.e. 'elizabeth'
    public var lineId: String?
    
    /// The friendly name of the line i.e. 'Elizabeth line'
    public var lineName: String?
    
    /// An array of route branches served by this this line
    public var stopPointSequences: [Branch]?
    
    public init(lineId: String? = nil, lineName: String? = nil, stopPointSequences: [Branch]? = nil) {
        self.lineId = lineId
        self.lineName = lineName
        self.stopPointSequences = stopPointSequences
    }
}

/// A data class representing a branch of a line, with a list of stop points
public struct Branch: Codable {
    
    /// The id of the line i.e. 'elizabeth'
    public var lineId: String?
    
    /// The friendly name of the line i.e. 'Elizabeth line'
    public var lineName: String?
    
    /// The id of this branch
    public var branchInd: Int?
    
    /// Any branches that follow from this branch
    public var nextBranchIds: [Int]?
    
    /// Any branches that this branch follows on from
    public var prevBranchIds: [Int]?
    
    /// An array of (ordered) stop points served by this branch of the route
    public var stopPoint: [StopPoint]?
    
    public init(lineId: String? = nil, lineName: String? = nil, branchInd: Int? = nil, nextBranchIds: [Int]? = nil, prevBranchIds: [Int]? = nil, stopPoint: [StopPoint]? = nil) {
        self.lineId = lineId
        self.lineName = lineName
        self.branchInd = branchInd
        self.nextBranchIds = nextBranchIds
        self.prevBranchIds = prevBranchIds
        self.stopPoint = stopPoint
    }
}
